#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è LLM –ø—Ä–æ–±–ª–µ–º
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent.parent))

from mind.cognitive_architecture import BrainDepartmentAgent, DepartmentConfig, BrainDepartment


async def test_llm_fix():
    """–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è LLM –ø—Ä–æ–±–ª–µ–º"""
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è LLM –ø—Ä–æ–±–ª–µ–º")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –æ—Ç–¥–µ–ª —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –º–æ–¥–µ–ª—è–º–∏
    test_configs = [
        {
            "name": "Architect Department",
            "role": BrainDepartment.ARCHITECT,
            "model": "llama3:8b"
        },
        {
            "name": "Engineer Department", 
            "role": BrainDepartment.ENGINEER,
            "model": "deepseek-coder-v2:latest"
        },
        {
            "name": "Critic Department",
            "role": BrainDepartment.CRITIC,
            "model": "llama3:8b"
        },
        {
            "name": "Memory Keeper Department",
            "role": BrainDepartment.MEMORY_KEEPER,
            "model": "llama3:8b"
        },
        {
            "name": "Documentor Department",
            "role": BrainDepartment.DOCUMENTOR,
            "model": "llama3:8b"
        },
        {
            "name": "Meta Observer Department",
            "role": BrainDepartment.META_OBSERVER,
            "model": "llama3:8b"
        }
    ]
    
    for config_data in test_configs:
        print(f"\nüß† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ {config_data['name']}...")
        
        try:
            config = DepartmentConfig(
                name=config_data["name"],
                role=config_data["role"],
                description="Test department",
                system_prompt="You are a test department. Respond briefly.",
                model_name=config_data["model"]
            )
            
            agent = BrainDepartmentAgent(config)
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
            result = await agent.process_input("Hello, test message")
            
            if result and hasattr(result, 'output'):
                print(f"  ‚úÖ –£—Å–ø–µ—à–Ω–æ: {result.output[:100]}...")
                print(f"  üìä –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {result.confidence:.2f}")
            else:
                print(f"  ‚ùå –û—à–∏–±–∫–∞: –ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞")
                
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "=" * 50)
    print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")


if __name__ == "__main__":
    asyncio.run(test_llm_fix()) 
#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å ARK
"""

import asyncio
import websockets
import json
import time

async def test_websocket():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"""
    uri = "ws://localhost:8000/ws"
    
    try:
        async with websockets.connect(uri) as websocket:
            print("‚úÖ WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            test_message = {
                "text": "–ø—Ä–∏–≤–µ—Ç",
                "user_id": "test_user"
            }
            
            print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ: {test_message}")
            await websocket.send(json.dumps(test_message))
            
            # –ñ–¥–µ–º –æ—Ç–≤–µ—Ç
            print("‚è≥ –û–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç...")
            response = await websocket.recv()
            data = json.loads(response)
            
            print(f"üì• –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç:")
            print(f"   –¢–∏–ø: {data.get('type')}")
            print(f"   –¢–µ–∫—Å—Ç: {data.get('text')}")
            print(f"   Reasoning Chain: {len(data.get('reasoning_chain', []))} —à–∞–≥–æ–≤")
            print(f"   –°–æ–∑–Ω–∞–Ω–∏–µ: {data.get('consciousness_state')}")
            print(f"   –≠–º–æ—Ü–∏—è: {data.get('emotion_state')}")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ—â–µ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
            test_message2 = {
                "text": "–∫–∞–∫ –¥–µ–ª–∞?",
                "user_id": "test_user"
            }
            
            print(f"\nüì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {test_message2}")
            await websocket.send(json.dumps(test_message2))
            
            # –ñ–¥–µ–º –≤—Ç–æ—Ä–æ–π –æ—Ç–≤–µ—Ç
            print("‚è≥ –û–∂–∏–¥–∞–µ–º –≤—Ç–æ—Ä–æ–π –æ—Ç–≤–µ—Ç...")
            response2 = await websocket.recv()
            data2 = json.loads(response2)
            
            print(f"üì• –ü–æ–ª—É—á–µ–Ω –≤—Ç–æ—Ä–æ–π –æ—Ç–≤–µ—Ç:")
            print(f"   –¢–∏–ø: {data2.get('type')}")
            print(f"   –¢–µ–∫—Å—Ç: {data2.get('text')}")
            print(f"   Reasoning Chain: {len(data2.get('reasoning_chain', []))} —à–∞–≥–æ–≤")
            
            print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ WebSocket: {e}")

if __name__ == "__main__":
    asyncio.run(test_websocket()) 